services:
  db:
    image: postgres:15-alpine
    container_name: sih_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sih
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build: ./backend
    container_name: sih_backend
    restart: unless-stopped
    env_file: .env
    environment:
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
      - HF_HOME=/models
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./models:/models
    command: bash -lc "./entrypoint.sh"

  frontend:
    build: ./frontend
    container_name: sih_frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
      - VITE_PROXY_TARGET=http://backend:5000
      - VITE_USE_MOCK=false
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "rm -f package-lock.json && npm install --include=dev && npm rebuild && npm run dev -- --host 0.0.0.0 --port 3000"

volumes:
  db-data:
    driver: local

